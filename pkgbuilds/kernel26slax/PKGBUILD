# Maintainer: Jens Pranaitis <jens@jenux.homelinux.org>
# Based on the work of godane <slaxemulator@gmail.com>
pkgname=kernel26slax
_basekernel=2.6.27
pkgver=2.6.27.8
pkgrel=1
pkgdesc="Linux kernel based on slax config. Used in chaox-ng"
arch=(i686)
license=('GPL2')
groups=('base')
url="http://www.kernel.org"
depends=('coreutils' 'module-init-tools' 'mkinitcpio>=0.5.18')
replaces=('kernel24' 'kernel24-scsi' 'kernel26-scsi'
          'alsa-driver' 'ieee80211' 'hostap-driver26'
          'pwc' 'nforce' 'squashfs' 'ivtv'
	  'zd1211' 'kvm-modules' 'iwlwifi' 'rt2x00-cvs' 'kernel26')
provides=('kernel26')
install=$pkgname.install
source=(ftp://ftp.kernel.org/pub/linux/kernel/v2.6/linux-$_basekernel.tar.bz2
	http://kernel.org/pub/linux/kernel/v2.6/patch-$pkgver.bz2
        config
	aufs-patches.patch
	http://patches.aircrack-ng.org/ath5k-injection-2.6.27-rc2.patch
	http://patches.aircrack-ng.org/ieee80211_inject-2.6.22.patch
	http://patches.aircrack-ng.org/zd1211rw_inject_2.6.26.patch
	http://patches.aircrack-ng.org/b43-injection-2.6.26-wl.patch
	http://www.kernel.org/pub/linux/kernel/people/edward/reiser4/reiser4-for-2.6/reiser4-for-2.6.27.patch.bz2
	openlog.patch
	atl2-2.6.27.patch
	http://downloads.sourceforge.net/squashfs/squashfs3.4.tar.gz
	sqlzma2k-3.4.patch
)
md5sums=('b3e78977aa79d3754cb7f8143d7ddabd'
         'ec23e3dce22b23ca681199fe515f10fb'
         '6f057b4c0c02582a225c24e619156610'
         'e1cc3c48b5f52bb19b2b011bd488e065'
         '69c34c83c6f64570efa3bc65c39304c5'
         '2c3adc6510c5bd47f0a04ace4aa2ea1d'
         'a162a23b5db02738309e54b6ca9fcbc9'
         '303c049e71f0d5c7ef75b7286aa9bf94'
         '22988387f64f299489b90b484b2642cc'
         'a49390dd08e4f7702b8f4b550f1ad84e'
         'ab007556b0194704269723724ba003bb'
         '2a4d2995ad5aa6840c95a95ffa6b1da6'
         '0b024ec3aefd98c68b30334d3ab682df')
build() {
  KARCH=x86

  cd "${srcdir}"/linux-$_basekernel
  if [ "$_kernver" != "$pkgver" ]; then
  # add latest kernel stable patch
         patch -Np1 < "${srcdir}"/patch-$pkgver ||return 1
  fi
  # add squashfs and aufs
  patch -Np1 -i "${srcdir}"/aufs-patches.patch || return 1
  patch -Np1 -i "${srcdir}"/squashfs3.4/kernel-patches/linux-2.6.27-rc4/squashfs3.4-patch || return 1
  patch -Np1 -i "${srcdir}"/sqlzma2k-3.4.patch || return 1
  # add injection support
  patch -Np1 -i "${srcdir}"/ath5k-injection-2.6.27-rc2.patch || return 1
  patch -Np1 -i "${srcdir}"/ieee80211_inject-2.6.22.patch || return 1
  patch -Np0 -i "${srcdir}"/zd1211rw_inject_2.6.26.patch || return 1
  patch -Np1 -i "${srcdir}"/b43-injection-2.6.26-wl.patch || return 1
  # add openlog patch
  patch -Np0 -i "${srcdir}"/openlog.patch || return 1
  # add reiser4 patch
  patch -Np1 -i "${srcdir}"/reiser4-for-2.6.27.patch || return 1
  # add atl1e support
  patch -Np1 -i "${srcdir}"/atl2-2.6.27.patch || return 1 
  cp ../config ./.config
  # build the full kernel version to use in pathnames
  . ./.config
  ### next line is only needed for rc kernels
  _kernver="$pkgver"${CONFIG_LOCALVERSION}""
  #_kernver="${_basekernel}${CONFIG_LOCALVERSION}"
  # load configuration
  #yes "" | make config
  make menuconfig
  make bzImage modules || return 1
  mkdir -p "${pkgdir}"/{lib/modules,boot}
  make INSTALL_MOD_PATH="${pkgdir}" modules_install || return 1
  cp System.map "${pkgdir}"/boot/System.map26
  cp arch/$KARCH/boot/bzImage "${pkgdir}"/boot/vmlinuz26
  install -D -m644 Makefile \
    "${pkgdir}"/usr/src/linux-${_kernver}/Makefile
  install -D -m644 kernel/Makefile \
    "${pkgdir}"/usr/src/linux-${_kernver}/kernel/Makefile
  install -D -m644 .config \
    "${pkgdir}"/usr/src/linux-${_kernver}/.config
  mkdir -p "${pkgdir}"/usr/src/linux-${_kernver}/include

  for i in acpi asm-{generic,x86} config linux math-emu media net pcmcia scsi sound video; do
    cp -a include/$i "${pkgdir}"/usr/src/linux-${_kernver}/include/
  done

  # copy files necessary for later builds, like nvidia and vmware
  cp Module.symvers "${pkgdir}"/usr/src/linux-${_kernver}
  cp -a scripts "${pkgdir}"/usr/src/linux-${_kernver}
  # fix permissions on scripts dir
  chmod og-w -R "${pkgdir}"/usr/src/linux-${_kernver}/scripts
  #mkdir -p "${pkgdir}"/usr/src/linux-${_kernver}/.tmp_versions

  mkdir -p "${pkgdir}"/usr/src/linux-${_kernver}/arch/$KARCH/kernel

  cp arch/$KARCH/Makefile "${pkgdir}"/usr/src/linux-${_kernver}/arch/$KARCH/
  if [ "$CARCH" = "i686" ]; then
    cp arch/$KARCH/Makefile_32.cpu "${pkgdir}"/usr/src/linux-${_kernver}/arch/$KARCH/
  fi
  cp arch/$KARCH/kernel/asm-offsets.s "${pkgdir}"/usr/src/linux-${_kernver}/arch/$KARCH/kernel/

  # add headers for lirc package
  mkdir -p "${pkgdir}"/usr/src/linux-${_kernver}/drivers/media/video
  cp drivers/media/video/*.h  "${pkgdir}"/usr/src/linux-${_kernver}/drivers/media/video/
  for i in bt8xx cpia2 cx25840 cx88 em28xx et61x251 pwc saa7134 sn9c102 usbvideo zc0301; do
   mkdir -p "${pkgdir}"/usr/src/linux-${_kernver}/drivers/media/video/$i
   cp -a drivers/media/video/$i/*.h "${pkgdir}"/usr/src/linux-${_kernver}/drivers/media/video/$i
  done
  # add dm headers
  mkdir -p "${pkgdir}"/usr/src/linux-${_kernver}/drivers/md
  cp drivers/md/*.h  "${pkgdir}"/usr/src/linux-${_kernver}/drivers/md
  # add inotify.h
  mkdir -p "${pkgdir}"/usr/src/linux-${_kernver}/include/linux
  cp include/linux/inotify.h "${pkgdir}"/usr/src/linux-${_kernver}/include/linux/
  # add CLUSTERIP file for iptables
  mkdir -p "${pkgdir}"/usr/src/linux-${_kernver}/net/ipv4/netfilter/
  # add wireless headers
  mkdir -p "${pkgdir}"/usr/src/linux-${_kernver}/net/mac80211/
  cp net/mac80211/*.h "${pkgdir}"/usr/src/linux-${_kernver}/net/mac80211/
  # add dvb headers for external modules
  # in reference to:
  # http://bugs.archlinux.org/task/9912
  mkdir -p "${pkgdir}"/usr/src/linux-${_kernver}/drivers/media/dvb/dvb-core
  cp drivers/media/dvb/dvb-core/*.h "${pkgdir}"/usr/src/linux-${_kernver}/drivers/media/dvb/dvb-core/
  # add xfs and shmem for aufs building
  mkdir -p "${pkgdir}"/usr/src/linux-${_kernver}/fs/xfs
  mkdir -p "${pkgdir}"/usr/src/linux-${_kernver}/mm
  cp fs/xfs/xfs_sb.h "${pkgdir}"/usr/src/linux-${_kernver}/fs/xfs/xfs_sb.h
  # add vmlinux
  cp vmlinux "${pkgdir}"/usr/src/linux-${_kernver}
  # copy in Kconfig files
  for i in `find . -name "Kconfig*"`; do 
    mkdir -p "${pkgdir}"/usr/src/linux-${_kernver}/`echo $i | sed 's|/Kconfig.*||'`
    cp $i "${pkgdir}"/usr/src/linux-${_kernver}/$i
  done

  cd "${pkgdir}"/usr/src/linux-${_kernver}/include && ln -s asm-$KARCH asm

  chown -R root.root "${pkgdir}"/usr/src/linux-${_kernver}
  find "${pkgdir}"/usr/src/linux-${_kernver} -type d -exec chmod 755 {} \;
  cd "${pkgdir}"/lib/modules/${_kernver} && \
    (rm -f source build; ln -sf ../../../usr/src/linux-${_kernver} build)
  # set correct depmod command for install
  sed -i -e "s/KERNEL_VERSION=.*/KERNEL_VERSION=${_kernver}/g" $startdir/$pkgname.install
  # remove unneeded architectures
  rm -rf "${pkgdir}"/usr/src/linux-${_kernver}/arch/{alpha,arm,arm26,avr32,blackfin,cris,frv,h8300,ia64,m32r,m68k,m68knommu,mips,parisc,powerpc,ppc,s390,sh,sh64,sparc,sparc64,um,v850,xtensa}
}
